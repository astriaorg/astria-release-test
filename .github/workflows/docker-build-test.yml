name: Docker Build Test

env:
  REPO_NAME: astriaorg/astria-release-test

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Git branch, or tag to build from.
        required: false
      target:
        description: Target to build.
        required: false
        type: choice
        options:
          - auctioneer
          - composer
          - conductor
          - sequencer
          - sequencer-relayer
          - evm-bridge-withdrawer
          - cli
          - account-monitor
  merge_group:
  push:
    branches:
      - "main"
    tags:
      - "**-v[0-9]+.[0-9]+.[0-9]+"
      - "**-v[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+"
      - "**-v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+"
      - "**-v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+"
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled

jobs:
  debug-workflow-trigger:
    runs-on: ubuntu-latest
    steps:
      - name: Debug workflow trigger information
        run: |
          echo "=== DOCKER-BUILD-TEST WORKFLOW DEBUG ==="
          echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "GitHub Event: ${{ github.event_name }}"
          echo "GitHub Ref: ${{ github.ref }}"
          echo "GitHub Ref Name: ${{ github.ref_name }}"
          echo "GitHub Ref Type: ${{ github.ref_type }}"
          echo "GitHub SHA: ${{ github.sha }}"
          echo "Workflow Run ID: ${{ github.run_id }}"
          echo "Workflow Run Number: ${{ github.run_number }}"
          echo "Triggered by: ${{ github.triggering_actor }}"
          echo ""
          echo "=== EVENT DETAILS ==="
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "Push event detected"
            echo "Pushed ref: ${{ github.ref }}"
            if [[ "${{ github.ref_type }}" == "tag" ]]; then
              echo "This is a TAG push event"
              echo "Tag name: ${{ github.ref_name }}"
            elif [[ "${{ github.ref_type }}" == "branch" ]]; then
              echo "This is a BRANCH push event"
              echo "Branch name: ${{ github.ref_name }}"
            fi
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Manual workflow dispatch detected"
            echo "Target: ${{ inputs.target }}"
            echo "Tag: ${{ inputs.tag }}"
          else
            echo "Other event type: ${{ github.event_name }}"
          fi
          echo "=== END DEBUG ==="

  run_checker:
    uses: ./.github/workflows/reusable-run-checker.yml

  auctioneer:
    needs: run_checker
    if: needs.run_checker.outputs.run_docker == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'auctioneer')
    uses: "./.github/workflows/reusable-docker-build.yml"
    permissions:
      contents: read
      id-token: write
      packages: write
    with:
      depot-project-id: 0q41v32h7j
      package-name: auctioneer
      binary-name: auctioneer
      tag: ${{ inputs.tag }}
      force: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'auctioneer' }}
      # Add suffix for test images
      image-suffix: release-test
    secrets: inherit

  composer:
    needs: run_checker
    if: needs.run_checker.outputs.run_docker == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'composer')
    uses: "./.github/workflows/reusable-docker-build.yml"
    permissions:
      contents: read
      id-token: write
      packages: write
    with:
      depot-project-id: 0q41v32h7j
      package-name: composer
      binary-name: composer
      tag: ${{ inputs.tag }}
      force: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'composer' }}
      # Add suffix for test images
      image-suffix: release-test
    secrets: inherit

  conductor:
    needs: run_checker
    if: needs.run_checker.outputs.run_docker == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'conductor')
    uses: "./.github/workflows/reusable-docker-build.yml"
    permissions:
      contents: read
      id-token: write
      packages: write
    with:
      depot-project-id: 0q41v32h7j
      package-name: conductor
      binary-name: conductor
      tag: ${{ inputs.tag }}
      force: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'conductor' }}
      # Add suffix for test images
      image-suffix: release-test
    secrets: inherit

  sequencer:
    needs: run_checker
    if: needs.run_checker.outputs.run_docker == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'sequencer')
    uses: "./.github/workflows/reusable-docker-build.yml"
    permissions:
      contents: read
      id-token: write
      packages: write
    with:
      depot-project-id: 0q41v32h7j
      package-name: sequencer
      binary-name: sequencer
      tag: ${{ inputs.tag }}
      force: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'sequencer' }}
      # Add suffix for test images
      image-suffix: release-test
    secrets: inherit

  sequencer-relayer:
    needs: run_checker
    if: needs.run_checker.outputs.run_docker == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'sequencer-relayer')
    uses: "./.github/workflows/reusable-docker-build.yml"
    permissions:
      contents: read
      id-token: write
      packages: write
    with:
      depot-project-id: 0q41v32h7j
      package-name: sequencer-relayer
      binary-name: sequencer-relayer
      tag: ${{ inputs.tag }}
      force: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'sequencer-relayer' }}
      # Add suffix for test images
      image-suffix: release-test
    secrets: inherit

  evm-bridge-withdrawer:
    needs: run_checker
    if: needs.run_checker.outputs.run_docker == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'evm-bridge-withdrawer')
    uses: "./.github/workflows/reusable-docker-build.yml"
    permissions:
      contents: read
      id-token: write
      packages: write
    with:
      depot-project-id: 0q41v32h7j
      package-name: evm-bridge-withdrawer
      binary-name: bridge-withdrawer
      tag: ${{ inputs.tag }}
      force: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'evm-bridge-withdrawer' }}
      # Add suffix for test images
      image-suffix: release-test
    secrets: inherit

  cli:
    needs: run_checker
    if: needs.run_checker.outputs.run_docker == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'cli')
    uses: "./.github/workflows/reusable-docker-build.yml"
    permissions:
      contents: read
      id-token: write
      packages: write
    with:
      depot-project-id: 0q41v32h7j
      package-name: astria-cli
      binary-name: cli
      tag: ${{ inputs.tag }}
      force: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'cli' }}
      # Add suffix for test images
      image-suffix: release-test
    secrets: inherit

  account-monitor:
    needs: run_checker
    if: needs.run_checker.outputs.run_docker == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'account-monitor')
    uses: "./.github/workflows/reusable-docker-build.yml"
    permissions:
      contents: read
      id-token: write
      packages: write
    with:
      depot-project-id: 0q41v32h7j
      package-name: account-monitor
      binary-name: account-monitor
      tag: ${{ inputs.tag }}
      force: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'account-monitor' }}
      # Add suffix for test images
      image-suffix: release-test
    secrets: inherit

  smoke-test:
    needs: [run_checker, composer, conductor, sequencer, sequencer-relayer, evm-bridge-withdrawer, cli]
    # TODO: (flip this back when merge to main repo) github.event.pull_request.head.repo.fork == false) &&
    if: |
      (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == true) &&
      (github.event_name == 'merge_group' || needs.run_checker.outputs.run_docker == 'true')
    runs-on: depot-ubuntu-24.04-8
    steps:
      - uses: actions/checkout@v4
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install kind
        uses: helm/kind-action@v1
        with:
          install_only: true
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test Skipped
        run: echo "Test Skipped"

  smoke-test-evm-rollup-restart:
    needs: [run_checker, composer, conductor, sequencer, sequencer-relayer, evm-bridge-withdrawer, cli]
    if: |
      (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == true) &&
      (github.event_name == 'merge_group' || needs.run_checker.outputs.run_docker == 'true')
    runs-on: buildjet-8vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@v4
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install kind
        uses: helm/kind-action@v1
        with:
          install_only: true
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test Skipped
        run: echo "Test Skipped"

  smoke-cli:
    needs: [run_checker, composer, conductor, sequencer, sequencer-relayer, evm-bridge-withdrawer, cli]
    # TODO: (flip this back when merge to main repo) github.event.pull_request.head.repo.fork == false) &&
    if: |
      (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == true) &&
      (github.event_name == 'merge_group' || needs.run_checker.outputs.run_docker == 'true')
    runs-on: depot-ubuntu-24.04-8
    steps:
      - uses: actions/checkout@v4
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install kind
        uses: helm/kind-action@v1
        with:
          install_only: true
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test Skipped
        run: echo "Test Skipped"

  upgrade-test:
    needs: [run_checker, composer, conductor, sequencer, sequencer-relayer, evm-bridge-withdrawer, cli]
    if: |
      (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == true) &&
      (github.event_name == 'merge_group' || needs.run_checker.outputs.run_docker == 'true')
    runs-on: depot-ubuntu-24.04-8
    steps:
      - uses: actions/checkout@v4
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install kind
        uses: helm/kind-action@v1
        with:
          install_only: true
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
      - name: Install buf
        uses: bufbuild/buf-setup-action@v1
        with:
          version: "1.50.1"
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test Skipped
        run: echo "Test Skipped"

  ibc-bridge-test:
    needs: [ run_checker, composer, conductor, sequencer, sequencer-relayer, evm-bridge-withdrawer, cli ]
    # TODO: (flip this back when merge to main repo) github.event.pull_request.head.repo.fork == false) &&
    if: |
      (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == true) &&
      (github.event_name == 'merge_group' || needs.run_checker.outputs.run_docker == 'true')
    runs-on: depot-ubuntu-24.04-8
    steps:
      - uses: actions/checkout@v4
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install kind
        uses: helm/kind-action@v1
        with:
          install_only: true
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test Skipped
        run: echo "Test Skipped"

  ibc-no-native-asset-test:
    needs: [ run_checker, composer, conductor, sequencer, sequencer-relayer, evm-bridge-withdrawer, cli ]
    # TODO: (flip this back when merge to main repo) github.event.pull_request.head.repo.fork == false) &&
    if: |
      (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == true) &&
      (github.event_name == 'merge_group' || needs.run_checker.outputs.run_docker == 'true')
    runs-on: depot-ubuntu-24.04-8
    steps:
      - uses: actions/checkout@v4
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install kind
        uses: helm/kind-action@v1
        with:
          install_only: true
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test Skipped
        run: echo "Test Skipped"

  ibc-timeout-refund:
    needs: [ run_checker, composer, conductor, sequencer, sequencer-relayer, evm-bridge-withdrawer, cli ]
    # TODO: (flip this back when merge to main repo) github.event.pull_request.head.repo.fork == false) &&
    if: |
      (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == true) &&
      (github.event_name == 'merge_group' || needs.run_checker.outputs.run_docker == 'true')
    runs-on: depot-ubuntu-24.04-8
    steps:
      - uses: actions/checkout@v4
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install kind
        uses: helm/kind-action@v1
        with:
          install_only: true
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test Skipped
        run: echo "Test Skipped"

  # Final job to report overall success/failure
  docker:
    if: ${{ always() && !cancelled() }}
    needs: [account-monitor, auctioneer, composer, conductor, sequencer, sequencer-relayer, evm-bridge-withdrawer, cli, smoke-test, smoke-cli, ibc-bridge-test, ibc-no-native-asset-test, ibc-timeout-refund, upgrade-test]
    uses: ./.github/workflows/reusable-success.yml
    with:
      success: ${{ !contains(needs.*.result, 'failure') }}
