name: Reusable Sync Charts Workflow

on:
  workflow_call:
    inputs:
      environment:
        description: 'Target environment (testnet or mainnet)'
        required: true
        type: string
      commit_sha:
        description: 'Commit SHA to use for charts'
        required: true
        type: string
    secrets:
      CHARTS_REPO_TOKEN:
        description: 'Token for accessing charts repository'
        required: true

jobs:
  sync-charts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit_sha }}
          fetch-depth: 1

      - name: Read chart version from Chart.yaml
        id: chart_version
        run: |
          # Read current version from Chart.yaml (assuming all charts have same version)
          CHART_VERSION=$(grep '^version:' charts/*/Chart.yaml | head -1 | cut -d':' -f2 | tr -d ' ')

          if [[ -z "$CHART_VERSION" ]]; then
            echo "‚ùå Could not find chart version in Chart.yaml files"
            exit 1
          fi

          echo "chart_version=${CHART_VERSION}" >> $GITHUB_OUTPUT
          echo "üìä Chart version: ${CHART_VERSION}"
          echo "üéØ Environment: ${{ inputs.environment }}"
          echo "üìù Note: Same chart version will be used across all environments"

      - name: Clone and update charts repository
        env:
          GITHUB_TOKEN: ${{ secrets.CHARTS_REPO_TOKEN }}
          REPO_NAME: charts-release-test
        run: |
          # Clone charts-release-test repo
          git clone https://github.com/${{ env.REPO_NAME }}.git ${env.REPO_NAME}
          cd ${env.REPO_NAME}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Copy charts from source repo
          rsync -av --delete ../charts/ ./

          # Update Chart.yaml files with environment-specific version
          CHART_VERSION="${{ steps.chart_version.outputs.chart_version }}"
          echo "üîÑ Updating charts to version: ${CHART_VERSION}"
          echo "Source commit: ${{ inputs.commit_sha }}"
          echo "Environment: ${{ inputs.environment }}"
          find . -name "Chart.yaml" -exec sed -i "s/version: .*/version: ${CHART_VERSION}/" {} \;

          # Commit and push charts
          git add .
          git commit -m "chore: update charts for ${{ inputs.environment }} to version ${CHART_VERSION}"

          git tag "${{ inputs.environment }}-${CHART_VERSION}"
          git push origin "${{ inputs.environment }}-${CHART_VERSION}"
          git push origin main

          echo "‚úÖ Charts updated to version ${CHART_VERSION} and synced to ${env.REPO_NAME}"

      - name: Chart sync summary
        run: |
          echo "üéâ Chart sync completed for ${{ inputs.environment }}"
          echo "Chart version: ${{ steps.chart_version.outputs.chart_version }}"
          echo "Source commit: ${{ inputs.commit_sha }}"
